
import tensorflow as tf
from sklearn.preprocessing import StandardScaler
import numpy as np
from sklearn.model_selection import train_test_split
from tensorflow.keras.layers import Input,Dense

x = np.random.rand(1000,5) 
y = 2*x[:,0]-3*x[:,1]+7*x[:,2] + np.random.randn(1000)

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)

scaler = StandardScaler()

x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

model = tf.keras.models.Sequential()

model.add(Input(shape=(x_train.shape[1],)))
model.add(Dense(64,activation='relu'))
model.add(Dense(32,activation='relu'))
model.add(Dense(1))
model.compile(optimizer='adam',loss='mse')

history = model.fit(x_train,y_train,epochs=2,validation_split=.2)

y_pred = model.predict(x_test)

from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test,y_pred)
mse



import matplotlib.pyplot as plt

plt.plot(history.history['loss'], label='Training Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.legend()