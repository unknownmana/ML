# In[59]:


import tensorflow as tf
from tensorflow.keras.datasets import cifar10
from tensorflow.keras.applications import VGG16


# In[ ]:


(x_train,y_train),(x_test,y_test) = cifar10.load_data()
x_train = x_train.reshape(-1,32,32,3).astype('float32')/255.0
x_test = x_test.reshape(-1,32,32,3).astype('float32')/255.0
# One-hot encode the labels
y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)


# In[60]:


base_model = VGG16(weights='imagenet',include_top=False,input_shape=(32,32,3))


# In[62]:


for i in base_model.layers:
    i.trainable = False


# In[65]:


model = tf.keras.models.Sequential([
    base_model,
    Flatten(),
    Dense(256,activation='relu'),
    Dense(10,activation='softmax')
])


# In[ ]:


model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])
model.fit(x_train,y_train,epochs=10,batch_size=32,verbose=1,validation_split=.2)


# In[ ]:


test_loss,test_acc = model.evaluate(x_test,y_test,verbose=2)
